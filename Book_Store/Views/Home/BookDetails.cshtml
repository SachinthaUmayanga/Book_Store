@model Book
@using System.Security.Claims
@{
    ViewData["Title"] = "Book Details";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-4">
            @if (string.IsNullOrEmpty(Model.Image))
            {
                <img src="/images/Untitled.png" class="img-fluid" width="240px" height="260px" alt="@Model.BookName">
            }
            else
            {
                <img src="/images/@Model.Image" class="img-fluid" width="240px" height="260px" alt="@Model.BookName">
            }
        </div>
        <div class="col-md-8">
            <h2 class="mb-3">@Model.BookName</h2>
            <div class="book-details">
                <p><strong>Author:</strong> @Model.AuthorName</p>
                <p><strong>Genre:</strong> @Model.GenreName</p>
                <p><strong>Condition:</strong> @Model.BookCondition</p>
                <p><strong>Price:</strong> LKR @Model.Price</p>

                @if (Model.Quantity > 0)
                {
                    <span class="badge bg-success">In Stock</span><br />
                    <button type="button" onclick="add(@Model.Id)" class="btn btn-primary mt-2">Add to Cart</button>
                }
                else
                {
                    <span class="badge bg-danger">Out of Stock</span>
                }
            </div>
        </div>
    </div>
    <div class="row">
        <div class="container mt-4">
            <div class="accordion" id="reviewsAccordion">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingReviews">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseReviews" aria-expanded="true" aria-controls="collapseReviews">
                            Reviews
                        </button>
                    </h2>
                    <div id="collapseReviews" class="accordion-collapse collapse show" aria-labelledby="headingReviews" data-bs-parent="#reviewsAccordion">
                        <div class="accordion-body">
                            <ul class="nav nav-tabs" id="reviewsTab" role="tablist">
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link active" id="all-reviews-tab" data-bs-toggle="tab" data-bs-target="#all-reviews" type="button" role="tab" aria-controls="all-reviews" aria-selected="true">All Reviews</button>
                                </li>
                                @if (User.Identity.IsAuthenticated)
                                {
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link" id="add-review-tab" data-bs-toggle="tab" data-bs-target="#add-review" type="button" role="tab" aria-controls="add-review" aria-selected="false">Add Review</button>
                                    </li>
                                }
                            </ul>
                            <div class="tab-content" id="reviewsTabContent">
                                <div class="tab-pane fade show active pt-3" id="all-reviews" role="tabpanel" aria-labelledby="all-reviews-tab">
                                    <!-- Display all reviews here -->
                                    <div id="reviewsContainer">
                                        <!-- Reviews will be loaded here by JavaScript -->
                                    </div>
                                </div>
                                <div class="tab-pane fade pt-3" id="add-review" role="tabpanel" aria-labelledby="add-review-tab">
                                    <!-- Add review form -->
                                    <form id="addReviewForm" method="post">
                                        <div class="mb-3">
                                            <label for="reviewTitle" class="form-label">Title</label>
                                            <input type="text" class="form-control" id="reviewTitle" name="Title" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="reviewContent" class="form-label">Content</label>
                                            <textarea class="form-control" id="reviewContent" name="Content" rows="3" required></textarea>
                                        </div>
                                        <input type="hidden" id="userId" name="UserId" value="@User.FindFirstValue(ClaimTypes.NameIdentifier)" />
                                        <input type="hidden" id="bookId" name="BookId" value="@Model.Id" />
                                        <button type="submit" class="btn btn-primary">Submit</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            loadReviews();

            document.getElementById("addReviewForm").addEventListener("submit", async function (event) {
                event.preventDefault();
                await addReview();
            });
        });

        async function loadReviews() {
            const bookId = @Model.Id;
            const userId = '@User.FindFirstValue(ClaimTypes.NameIdentifier)';
            const response = await fetch(`/api/Reviews?userId=${userId}&bookId=${bookId}`);
            const reviews = await response.json();

            const reviewsContainer = document.getElementById("reviewsContainer");
            reviewsContainer.innerHTML = "";

            if (reviews.length === 0) {
                reviewsContainer.innerHTML = "<p>No reviews available</p>";
            } else {
                reviews.forEach(review => {
                    const reviewElement = document.createElement("div");
                    reviewElement.classList.add("review");
                    reviewElement.innerHTML = `<h5 style="font-weight: bold; color: #007bff;">${review.title}</h5><p style="margin-top: 10px; font-size: 14px; color: #333;">${review.content}</p>`;
                    reviewsContainer.appendChild(reviewElement);
                });
            }
        }

        async function addReview() {
            const review = {
                Title: document.getElementById("reviewTitle").value,
                Content: document.getElementById("reviewContent").value,
                UserId: document.getElementById("userId").value,
                BookId: document.getElementById("bookId").value
            };

            const response = await fetch('/api/Reviews', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(review)
            });

            if (response.ok) {
                loadReviews();
                document.getElementById("addReviewForm").reset();
                alert("Review added successfully!");
            } else {
                alert("Failed to add review.");
            }
        }

        async function add(bookId) {
            var usernameEl = document.getElementById("username");
            if (usernameEl == null) {
                window.location.href = "/Identity/Account/Login";
            }
            try {
                var response = await fetch(`/Cart/AddItem?bookId=${bookId}`);
                if (response.status == 200) {
                    var result = await response.json();
                    var cartCountEl = document.getElementById("cartCount");
                    cartCountEl.innerHTML = result;
                    window.location.href = "#cartCount";
                }
            }
            catch (err) {
                console.log(err);
            }
        }
    </script>

    <!-- Add these in the <head> section for CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">

    <!-- Add these before the closing </body> tag for JavaScript -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
}